* STEP 1:
** Create a cluster:
```
eksctl create cluster --name acm-eks-demo --region us-east-2 --nodegroup-name acm-eks-nodes --node-type t2.xlarge --nodes 2
```

* STEP 2:
** Create IAM Open ID Connect (OIDC) provider
This allows EKS to talk to AWS API to create ALB
```
eksctl utils associate-iam-oidc-provider \
    --region ${AWS_REGION} \
    --cluster acm-eks-demo \
    --approve
```
* STEP 3:
** Create a IAM policy (aws cli)
Note that this policy is provided from the k8s sig

```
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
```
* STEP 4:
** Create the IAM Service account and attach it with the policy
```
eksctl create iamserviceaccount \
  --cluster acm-eks-demo \
  --namespace kube-system \
  --name aws-load-balancer-controller \
  --attach-policy-arn arn:aws:iam::${ACCOUNT_ID}:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve
```
* STEP 5
** Create TargetGroupBinding CRDs for alb
```
helm repo add eks https://aws.github.io/eks-charts

helm upgrade -i aws-load-balancer-controller \
    eks/aws-load-balancer-controller \
    -n kube-system \
    --set clusterName=acm-eks-demo \
    --set serviceAccount.create=false \
    --set serviceAccount.name=aws-load-balancer-controller \
    --set image.tag="${LBC_VERSION}"
```

* STEP 6
** Deploy the app
```
curl -s https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/examples/2048/2048_full.yaml \
    | sed 's=alb.ingress.kubernetes.io/target-type: ip=alb.ingress.kubernetes.io/target-type: instance=g' \
    | kubectl apply -f -
```
* STEP 7
** Get the URL
export GAME_2048=$(kubectl get ingress/ingress-2048 -n game-2048 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

echo http://${GAME_2048}
